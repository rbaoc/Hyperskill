import java.util.*;

class MinHeap {
    private int[] heap;
    private int size;
    private int maxsize;

    public int[] getHeap() {
        return heap;
    }

    public int getSize() {
        return size;
    }

    public MinHeap(int maxsize) {
        this.size = 0;
        this.maxsize = maxsize;
        heap = new int[maxsize + 1];
        heap[0] = Integer.MIN_VALUE;
    } 

    public void swap(int pos1, int pos2) {
        int tmp = heap[pos1];
        heap[pos1] = heap[pos2];
        heap[pos2] = tmp;
    }

    public void insert(int element) {
        heap[++size] = element;
        int current = size;

        while(heap[current] < heap[current / 2]) {
            swap(current, current / 2);
            current = current / 2;
        }
    }

    public int extractMin() {
        if (size == 0) {
            throw new NoSuchElementException("Heap is empty.");
        }

        int min = heap[1];
        heap[1] = heap[size--];
        minHeapify(1);    
        return min;
    }

    public void minHeapify(int pos) {
        if (2*pos == size) {
            if (heap[pos] > heap[2*pos]) {
                swap(pos, 2*pos);
                minHeapify(2*pos);
            }

            return;
        }

        if (2*pos < size) {
            if (heap[pos] > heap[2*pos] || heap[pos] > heap[2*pos + 1]) {
                if (heap[2*pos] < heap[2*pos + 1]) {
                    swap(pos, 2*pos);
                    minHeapify(2*pos);
                } else {
                    swap(pos, 2*pos + 1);
                    minHeapify(2*pos + 1);
                }
            }
        }
    }

    public void minHeap() {
        for (int pos = size/2; pos >= 1; pos--) {
            minHeapify(pos);
        }
    }

    public void printHeap() {
        for (int i = 1; i <= size; i++) {
            System.out.print(heap[i] + " ");
        }

        System.out.println();
    }
}

class Main {
    public static void main(String[] args) {
        // put your code here
        Scanner sc = new Scanner(System.in);
        int number = sc.nextInt();
        int[] sorted = new int[number];
        MinHeap minheap = new MinHeap(number);

        for (int i = 0; i < number; i++) {
            minheap.insert(sc.nextInt());
        }

        minheap.minHeap();
        minheap.printHeap();
        
        for (int i = 1; i < number; i++) {
            sorted[i-1] = minheap.extractMin();
            minheap.printHeap();
        }

        sorted[number - 1] = minheap.extractMin();
        for (int i : sorted) {
            System.out.print(i + " ");
        }
    }
}
