import java.util.*;

class Main {
    public static long inv = 0;

    public static void mergeSort(long[] arr, int left, int right) {
        if (left >= right - 1) 
            return;

        int mid = left + (right - left) / 2;

        mergeSort(arr, left, mid);
        mergeSort(arr, mid, right);

        merge(arr, left, mid, right);
    }

    public static void merge(long[] arr, int left, int mid, int right) {
        int i = left;
        int j = mid;
        int k = 0;
        
        long[] tmp = new long[right - left];

        while (i < mid && j < right) {
            if (arr[i] <= arr[j]) {
                tmp[k] = arr[i];
                i++;
            } else {
                tmp[k] = arr[j];
                inv += mid - i;
                j++;
            }
            
            k++;
        }

        for (; i < mid; i++, k++) {
            tmp[k] = arr[i];
        }

        for (; j < right; j++, k++) {
            tmp[k] = arr[j];
        }

        System.arraycopy(tmp, 0, arr, left, tmp.length);
    }

    public static void main(String[] args) {
        // put your code here
        Scanner sc = new Scanner(System.in);
        int len = sc.nextInt();
        long[] arr = new long[len];
        
        for (int i = 0; i < len; i++) {
            arr[i] = sc.nextLong();
        }

        mergeSort(arr, 0, arr.length);
        //System.out.println(Arrays.toString(arr));
        System.out.println(inv);
    }
}
